name: Build

on: [push, repository_dispatch]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        #os: [ubuntu-latest, macos-latest, windows-latest]
        os: [ubuntu-latest, windows-latest]
        #haxe-version: [4.0.5, 4.1.5, 4.2.2]
        haxe-version: [4.2.4]
        #target: [linux, windows, mac]
        target: [linux, windows]
        exclude:
          - os: ubuntu-latest
            target: windows
          - os: windows-latest
            target: linux


    steps:
    - uses: actions/checkout@v1
    - name: Setup Haxe (${{ matrix.target }}, haxe ${{ matrix.haxe-version }}, ${{ matrix.os }})
      uses: krdlab/setup-haxe@v1
      with:
        haxe-version: ${{ matrix.haxe-version }}

    - name: Setup app (${{ matrix.target }}, haxe ${{ matrix.haxe-version }}, ${{ matrix.os }})
      run: |
        mkdir zipped
        haxelib install hxcpp --always --quiet
        haxelib install hscript --always --quiet
        haxelib install json2object --always --quiet
        haxelib install ase --always --quiet
        haxelib install lime --always --quiet
        haxelib install openfl --always --quiet
        haxelib install flixel --always --quiet
        echo "y" \| haxelib run openfl setup
    - name: Build app (chroma-fighters_${{ matrix.target }})
      run: |
        cd .
        haxelib run openfl build ${{ matrix.target }} -debug
    - name: Archive Windows Release
      if: ${{ matrix.os == 'windows-latest' }}
      uses: thedoctor0/zip-release@master
      with:
        type: 'zip'
        filename: './zipped/windows.zip'
        path: './export/windows/bin/*'
    - name: Archive Linux Release
      if: ${{ matrix.os == 'ubuntu-latest' }}
      uses: thedoctor0/zip-release@master
      with:
        type: 'tar'
        filename: '../../../zipped/linux.tar.gz'
        directory: './export/linux/bin/'
        path: '.'
    #- name: publish windows artifact
    #  if: ${{ matrix.os == 'windows-latest' }}
    #  uses: 'actions/upload-artifact@v3'
    #  with:
    #    name: 'windows-build'
    #    path: |
    #      ./zipped/windows.zip
    #- name: publish linux artifact
    #  if: ${{ matrix.os == 'ubuntu-latest' }}
    #  uses: 'actions/upload-artifact@v3'
    #  with:
    #    name: 'linux-build'
    #    path: |
    #      ./zipped/linux.tar.gz
    - name: release on github
      #uses: 'ncipollo/release-action@v1'
      uses: "marvinpinto/action-automatic-releases@latest"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        #allowUpdates: true
        automatic_release_tag: "latest-${{ matrix.target }}"
        prerelease: true
        title: "Development Build"
        files: |
          ./zipped/